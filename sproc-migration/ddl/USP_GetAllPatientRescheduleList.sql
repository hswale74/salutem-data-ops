 CREATE procedure USP_GetAllPatientRescheduleList  ( 	@AccountId INT, 	@search nvarchar(50) = '', 	@BCMID INT=0, 	@PatientStatus INT=0, 	@LastCallOutcomeName varchar(500)=null, 	@FromDate Datetime=null, 	@ToDate Datetime=null, 	@orderBy nvarchar(50) = 'DisplayEncounterDate',  	@orderDir varchar(4) = 'asc',  	@StartFrom int = 0,   	@pageSize int = 99999 ) AS BEGIN 	DECLARE @toDateUpEndOfTheDay DATETIME; 	IF @ToDate IS NOT NULL 	BEGIN 		SELECT @toDateUpEndOfTheDay = DATEADD(DAY, 1, @ToDate); 	END  	DECLARE @CallCount int; 	WITH PatientLastActivityDates AS ( 		SELECT  			P.Patient_ID, 			P.Patient_First_Name, 			P.Patient_Last_Name, 		    P.Patient_MRN, 			P.Patient_DOB, 			P.Patient_Gender, 			P.PatientStatusId, 			P.Mobile, 			Max(PA.Activity_Actual_End_Time) AS LastActivityDate, 			P.RescheduleAttemptCount, 			MP.PracticeName 		FROM Trn_Patient_Activity PA  		INNER JOIN Mst_Activity MA ON MA.Activity_ID = PA.Activity_ID AND MA.ActivityType IN ('InitialAssessment','ProgressNote','GroupNote') 		INNER JOIN Mst_Patient P ON P.Patient_ID = PA.Patient_ID AND P.Account_ID = @AccountId  		LEFT JOIN Mst_Practice MP ON P.PatientPracticeId = MP.ID 		WHERE PA.Activity_Start_Status = 3 		GROUP BY 	P.Patient_ID, 			P.Patient_First_Name, 			P.Patient_Last_Name, 		    P.Patient_MRN, 			P.Patient_DOB, 			P.Patient_Gender, 			P.PatientStatusId, 			P.Mobile, 			P.RescheduleAttemptCount, 			MP.PracticeName 	), 	Result AS ( 		SELECT  			 			PLA.Patient_ID, 			PLA.Patient_First_Name + ' ' + PLA.Patient_Last_Name AS PatientFullName, 		    PLA.Patient_MRN, 			PLA.Patient_DOB, 			PLA.Patient_Gender, 			PLA.PatientStatusId, 			MU.User_First_Name + ' ' + MU.User_Last_Name AS LastEncounterBCMName, 			FA.EncounterDate, 			fp.LastCallDate, 			fp.LastOutreachby as Activity_Assigned_To, 			fp.LastCallOutcomeName, 			PLA.Mobile, 			MPS.StatusName, 			PLA.RescheduleAttemptCount, 			PLA.PracticeName 		From PatientLastActivityDates PLA  		CROSS APPLY dbo.funcEncounterInformationDetails(PLA.Patient_ID, PLA.LastActivityDate) FA 		OUTER apply dbo.funcGetPatientCommunicationDetails(PLA.Patient_ID,'Call') fp 		INNER JOIN Mst_User MU ON MU.User_ID = FA.Activity_Assigned_To 		INNER JOIN MstPatientStatuses MPS ON MPS.StatusID = PLA.PatientStatusId	 		WHERE  		--MPS.EnumStatusName NOT IN ('Ineligible','Declined') 		MPS.EnumStatusName IN ('Enrolled','EnrolledNotResponding') 		AND FA.Attendance IN (2,5) -- NoCallNoShow, Cancelled 		AND(@fromDate IS NULL OR FA.EncounterDate >= @fromDate) 		AND (@ToDate IS NULL OR FA.EncounterDate < @toDateUpEndOfTheDay) 		AND ((PLA.Patient_First_Name + ' ' + PLA.Patient_Last_Name) LIKE '%' + @search + '%' 				OR (PLA.Patient_Last_Name + ' ' + PLA.Patient_First_Name) LIKE '%' + @search + '%' 				OR PLA.Patient_MRN LIKE '%' + @search + '%' 				OR PLA.Mobile LIKE '%' + @search + '%')  		AND (@BCMID = 0 OR FA.Activity_Assigned_To = @BCMID) 		AND (@PatientStatus = 0 OR PLA.PatientStatusId = @PatientStatus) 		AND (@LastCallOutcomeName IS NULL OR fp.LastCallOutcomeName LIKE '%'+ @LastCallOutcomeName +'%') 	), 	OrderByResult AS (SELECT *, 				ROW_NUMBER() over ( 				order BY case when @orderBy = 'DisplayEncounterDate' and @orderDir = 'asc' then EncounterDate end, 									case when @orderBy = 'DisplayEncounterDate' and @orderDir = 'desc' then EncounterDate end desc 				 		 				) AS RowNumber FROM Result  	) 	SELECT *, (Select Count(Patient_ID) FROM Result) TotalRows   	FROM OrderByResult  	WHERE  OrderByResult.RowNumber BETWEEN (@StartFrom + 1) AND (@StartFrom  + @pageSize) 	 	 END  /* exec [dbo].[USP_GetAllPatientRescheduleList] @AccountId=22,@search=N'',@orderBy=N'EncounterDate',@orderDir='desc',@StartFrom=0,@pageSize=10 */  