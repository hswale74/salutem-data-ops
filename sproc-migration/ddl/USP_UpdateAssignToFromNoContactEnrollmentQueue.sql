 CREATE procedure USP_UpdateAssignToFromNoContactEnrollmentQueue ( 	@PatientID int, 	@EnrollmentId int, 	@AttemptNumber int, 	@AssignTo int ) AS BEGIN 	DECLARE @PatientActivityID int; 	DECLARE @ActivityStartStatus int; 	;WITH MyCte AS  	( 		SELECT Patient_Activity_ID,Activity_Start_Status, 		RowNum = row_number() OVER ( order by Patient_Activity_ID ) 		FROM Trn_Patient_Activity  		WHERE Patient_ID = @PatientID AND Activity_ID = 1 AND Patient_Enroll_ID = @EnrollmentId 	) 	SELECT @PatientActivityID = Patient_Activity_ID,@ActivityStartStatus=Activity_Start_Status 	FROM    MyCte 	WHERE   RowNum = @AttemptNumber 	 	IF(@PatientActivityID IS NOT NULL) 	BEGIN 		IF (@ActivityStartStatus = 3 AND @AttemptNumber >= 3) 		BEGIN 			-- create next attempt and assign to given user 			--INSERT INTO Trn_Patient_Activity(Patient_ID,Activity_ID,Activity_Type_ID,Activity_Start_Date,Activity_Start_Time,Activity_Assigned_To, 			--Activity_Start_Status,Activity_CretaedAt,Activity_CreatedBy,Patient_Enroll_ID) 			--VALUES(@PatientID,1,1,GETDATE(),'00:00:00.0000000',@AssignTo,1,GETDATE(),21,@EnrollmentId)  			-- Create Attempt record 			-- IF @AssignTo = 0 then insert null, due to having forign key relation on AssignTo field. 			DECLARE @nextAttempt int = @AttemptNumber + 1; 			IF(@AssignTo = 0) 			BEGIN 				INSERT INTO Trn_Enrollment_Attempt(EnrollmentId,AttemptNumber,AttemptStatus,AssignedUserId,AttemptDate) 				VALUES(@EnrollmentId,@nextAttempt,0,NULL,GETDATE())  				SELECT 'OutMessage' = 'Activity unassigned successfully.'; 			END 			ELSE 			BEGIN 				INSERT INTO Trn_Enrollment_Attempt(EnrollmentId,AttemptNumber,AttemptStatus,AssignedUserId,AttemptDate) 				VALUES(@EnrollmentId,@nextAttempt,0,@AssignTo,GETDATE())  				SELECT 'OutMessage' = 'Activity assigned successfully.'; 			END 		END 		ELSE IF (@ActivityStartStatus IN (1,2) AND @AttemptNumber >= 4 AND @AssignTo > 0) 		BEGIN; 			-- Update Trn_Patient_Activity 			UPDATE Trn_Patient_Activity SET Activity_Assigned_To = @AssignTo, Activity_Start_Status = 1 WHERE Patient_Activity_ID = @PatientActivityID  			-- Update Trn_Enrollment_Attempt 			UPDATE Trn_Enrollment_Attempt SET AssignedUserId = @AssignTo, AttemptStatus = 0 WHERE EnrollmentId = @EnrollmentId AND AttemptNumber = @AttemptNumber 			 			SELECT 'OutMessage' = 'Activity assigned successfully.'; 		END 		ELSE IF (@ActivityStartStatus IN (1,2) AND @AttemptNumber >= 4 AND @AssignTo = 0) 		BEGIN 			-- Update Trn_Patient_Activity 			UPDATE Trn_Patient_Activity SET Activity_Assigned_To = NULL, Activity_Start_Status = 1 WHERE Patient_Activity_ID = @PatientActivityID  			---- Update Trn_Enrollment_Attempt 			UPDATE Trn_Enrollment_Attempt SET AssignedUserId = NULL, AttemptStatus = 0 WHERE EnrollmentId = @EnrollmentId AND AttemptNumber = @AttemptNumber 			 			SELECT 'OutMessage' = 'Activity unassigned successfully.'; 		END 	END	 	ELSE IF(@PatientActivityID IS NULL) 	BEGIN 		IF(@AttemptNumber >= 3 AND @PatientID IS NOT NULL AND @EnrollmentId IS NOT NULL AND @AssignTo > 0) 		BEGIN 			UPDATE Trn_Enrollment_Attempt SET AssignedUserId = @AssignTo, AttemptStatus = 0 WHERE EnrollmentId = @EnrollmentId AND AttemptNumber = @AttemptNumber 			SELECT 'OutMessage' = 'Activity assigned successfully.'; 		END 		ELSE IF(@AttemptNumber >= 3 AND @PatientID IS NOT NULL AND @EnrollmentId IS NOT NULL AND @AssignTo =0) 		BEGIN 			UPDATE Trn_Enrollment_Attempt SET AssignedUserId = NULL, AttemptStatus = 0 WHERE EnrollmentId = @EnrollmentId AND AttemptNumber = @AttemptNumber 			SELECT 'OutMessage' = 'Activity unassigned successfully.'; 		END 	END 	ELSE 	BEGIN 		SELECT 'OutMessage' = 'Activity not found.'; 	END END --@PatientID int, --	@EnrollmentId int, --	@AttemptNumber int, --	@AssignTo int --EXEC USP_UpdateAssignToFromNoContactEnrollmentQueue 23960,15834,9,0