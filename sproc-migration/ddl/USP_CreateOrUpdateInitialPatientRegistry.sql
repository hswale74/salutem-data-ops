 CREATE procedure USP_CreateOrUpdateInitialPatientRegistry ( 	@UserID INT = 3 ) AS BEGIN 	SET NOCOUNT ON;  	DECLARE @IAActivityID INT; 	DECLARE @AccountID INT; 	SELECT @IAActivityID = Activity_ID FROM Mst_Activity WHERE ActivityType='InitialAssessment'; 	SELECT @AccountID  = Account_ID FROM Mst_Account WHERE AccountType = 3; -- for mind healthy account 	 	WITH PatientsFirstIA AS ( 			SELECT P.Patient_ID, Patient_Activity_ID, Coalesce(Activity_Actual_End_Time, Activity_Actual_Start_Time) AS ActivityDate, DateOfService 			FROM Mst_Patient P INNER JOIN Trn_Patient_Activity PA ON P.Patient_ID = PA.Patient_ID AND P.Account_ID = @AccountID AND PA.Activity_ID = @IAActivityID AND PA.Activity_Start_Status = 3 		)-- SELECT * FROM PatientsFirstIA 		SELECT * INTO #TempTable FROM (SELECT P.Patient_ID, Patient_First_Name, Patient_Last_Name, Patient_DOB 			,Ph.PhysicianName AS ReferringProviderName 			,Pr.PracticeName 			,DXT.Dx 			,IA.DateOfService 			,IA.ActivityDate 			,IA.Patient_Activity_ID IAPatientActivityID 			,PHQScore.Score AS FirstPHQScore 			,GADScore.Score AS FirstGADScore 			,PA.HasFlagForReview 			,PA.ReviewNote 			,ALog.CliniciansName 		FROM Mst_Patient P 		LEFT JOIN Mst_Physician Ph ON Ph.ID = P.ReferringProviderId  		LEFT JOIN Mst_Practice Pr on Pr.ID = P.PatientPracticeId 		LEFT JOIN PatientsFirstIA IA ON P.Patient_ID = IA.Patient_ID 		INNER JOIN Trn_Patient_Activity PA ON PA.Patient_Activity_ID = IA.Patient_Activity_ID  		LEFT JOIN TrnPatientAssessmentLog ALog ON ALog.PatientActivityID = IA.Patient_Activity_ID  		CROSS APPLY funcGetDXCodeByPatientId(P.Patient_ID) DXT 		CROSS APPLY funcGetPatientPHQorGADScore(P.Patient_ID, IA.Patient_Activity_ID, 1, 1) PHQScore 		CROSS APPLY funcGetPatientPHQorGADScore(P.Patient_ID, IA.Patient_Activity_ID, 1, 2) GADScore 		WHERE Account_ID = @AccountID AND Patient_Status = 1 	) A 	 	DECLARE @Cursor_PatientID INT 	DECLARE TempRegistry_Cursor CURSOR FOR SELECT Patient_ID FROM #TempTable 	OPEN TempRegistry_Cursor   	    FETCH NEXT FROM TempRegistry_Cursor INTO @Cursor_PatientID 	    WHILE @@FETCH_STATUS = 0   	    BEGIN   	        IF EXISTS (SELECT * FROM TrnPatientRegistry WHERE PatientID = @Cursor_PatientID) 			BEGIN  				UPDATE TrnPatientRegistry  					SET ClinicianName = T.CliniciansName,  					ReferringProviderName=T.ReferringProviderName,  					PracticeName = T.PracticeName, 					Diagnosis = T.Dx, 					PHQ9FirstServiceDate=T.ActivityDate, 					PHQ9FirstScore = T.FirstPHQScore, 					GAD7FirstServiceDate = T.ActivityDate, 					GAD7FirstScore = T.FirstGADScore, 					PatientActivityID = T.IAPatientActivityID, 					IsFlagged= T.HasFlagForReview, 					FlagComment = T.ReviewNote, 					UpdatedBy = @UserID 				FROM TrnPatientRegistry R INNER JOIN #TempTable T ON R.PatientID = T.Patient_ID AND T.Patient_ID = @Cursor_PatientID 				 				--PRINT 'Record Found: '+  Convert(varchar(50), @Cursor_PatientID) 			END 			ELSE BEGIN  				INSERT INTO TrnPatientRegistry (PatientID, ClinicianName,ReferringProviderName,PracticeName,Diagnosis,ServiceStartDate,PHQ9FirstServiceDate,PHQ9FirstScore,GAD7FirstServiceDate,GAD7FirstScore,PatientActivityID,IsFlagged,FlagComment,UpdatedBy, UpdatedOn) 				SELECT T.Patient_ID, T.CliniciansName,ReferringProviderName,PracticeName,T.Dx,T.DateOfService,T.ActivityDate, T.FirstPHQScore,T.ActivityDate,T.FirstGADScore,T.IAPatientActivityID,T.HasFlagForReview,T.ReviewNote,@UserID,GETUTCDATE() 				FROM #TempTable T WHERE T.Patient_ID = @Cursor_PatientID 				--PRINT 'Record not found: '+ Convert(varchar(50), @Cursor_PatientID) 			END 			 			FETCH NEXT FROM TempRegistry_Cursor INTO @Cursor_PatientID   		END   	 	CLOSE TempRegistry_Cursor   	DEALLOCATE TempRegistry_Cursor    	SELECT ID,PatientID,ClinicianName,ReferringProviderName,PracticeName,Diagnosis,ServiceStartDate,PHQ9FirstServiceDate,PHQ9FirstScore, 	PHQ9LastServiceDate,PHQ9LastScore,GAD7LastServiceDate,GAD7LastScore,IsFlagged,FlagComment,IsReviewed,UpdatedBy,UpdatedOn FROM TrnPatientRegistry 	 	DROP TABLE #TempTable END  -- EXEC USP_CreateOrUpdateInitialPatientRegistry 3