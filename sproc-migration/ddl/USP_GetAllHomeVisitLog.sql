 CREATE PROCEDURE USP_GetAllHomeVisitLog ( 	@userId int, 	@AccountId INT, 	@ActivityNumber INT, 	@search nvarchar(50) = '', 	@orderBy nvarchar(50) = 'Paitent_ID',  	@orderDir varchar(4) = 'asc',  	@pageIndex int = 0,  	@pageSize int = 99999 ) AS BEGIN 	SET NOCOUNT ON; 	--DECLARE @currentYear int = YEAR(GETDATE()); 	Declare @isAdmin BIT; 	SET @isAdmin = dbo.func_IsUserAdmin(@userId);  	WITH Result AS ( 		Select  		MA.Activity_ID,  		MA.Activity_Name, 		MA.ActivityType,  		MA.Activity_Description, 		TPA.Patient_Activity_ID, 		TPA.Patient_ID, 		P.Patient_First_Name, 		P.Patient_Last_Name, 		P.Patient_First_Name + ' '+ P.Patient_Last_Name  AS PatientFullName, 		P.Patient_DOB, 		P.Patient_MRN, 		patientContact.Patient_Contact_Phone, 		IPL.InPatientLogId, 		IPL.DischargeDate, 		TPA.IsHospitalEHRDocumentation, 		IPL.NotesBy, 		IPL.Notes, 		IPL.NotesDate, 		IPL.IsReferral, 		TPA.Activity_Type_ID, 		MAT.Activity_Type_Name, 		Coalesce(TPA.Activity_Actual_End_Time, TPA.Activity_Actual_Start_Time, TPA.Activity_Start_Date ) AS Activity_Start_Date, 		TPA.Activity_Start_Time, 		TPA.Activity_Actual_Start_Time, 		TPA.Activity_Actual_End_Time, 		TPA.Activity_Assigned_To, 		(CASE WHEN MU.User_ID IS NOT NULL THEN MU.User_First_Name + ' ' + MU.User_Last_Name ELSE '' END) AS Activity_Assigned_To_Name, 		TPA.Activity_Note, 		Coalesce(TPA.Activity_Start_Status, 1) AS Activity_Start_Status, 		enum.Discription AS DisplayActivityStartStatus, 		TPA.Activity_Delay_Note, 		TPA.Activity_Status, 		TPA.Activity_CretaedAt, 		TPA.Activity_CreatedBy, 		TPA.Activity_UpdatedAt, 		TPA.Activity_UpdatedBy, 		TPA.Patient_Enroll_ID, 		PAA.AttemptNumber AS AttemptNumber, 		--PAA.AttemptStatus, 		TPA.LastAttemptDate, 		TPA.LastCallOutcomeName, 		ActivityOutcomeName 	From Trn_InPatientLog IPL with (nolock) 	INNER JOIN Trn_Patient_Activity TPA with (nolock) ON TPA.Patient_ID = IPL.Patient_ID AND TPA.InPatientLogId = IPL.InPatientLogId AND IPL.IsHomeVisitScheduled = 1  		AND IPL.IsHospitalEHRDocumentation = 1 AND TPA.Activity_Assigned_To IS NOT NULL  	INNER JOIN Mst_Activity MA ON MA.Activity_ID = TPA.Activity_ID AND MA.ActivityType = 'HomeVisit' --AND MA.ActivityNumber = @ActivityNumber 	INNER JOIN Mst_Patient P ON P.Patient_ID = TPA.Patient_ID AND P.Patient_Status = 1 AND P.Account_ID = @AccountId 	INNER JOIN Mst_Activity_Type MAT ON MAT.Activity_Type_ID = TPA.Activity_Type_ID 	INNER JOIN Mst_Enum enum ON Coalesce(TPA.Activity_Start_Status, 1) = enum.EnumValue AND enum.EnumType ='ActivityStatus' --AND Coalesce(TPA.Activity_Start_Status, 1) NOT IN (5,6,11) 	LEFT JOIN View_PatientActivityAttempt PAA ON PAA.Patient_Activity_ID = TPA.Patient_Activity_ID 	LEFT JOIN  			dbo.Trn_Patient_Contact patientContact with (nolock) ON P.Patient_ID = patientContact.Patient_ID AND patientContact.IsPrimary = 1  	LEFT JOIN Trn_Activity_Attempt TAA with (nolock) ON TPA.Patient_Activity_ID = TAA.Patient_Activity_ID AND TAA.AttemptNumber = PAA.AttemptNumber 	LEFT JOIN Mst_User MU with (nolock) ON MU.User_ID = TPA.Activity_Assigned_To 		WHERE ((Patient_First_Name + ' ' + Patient_Last_Name)  LIKE '%' + @search + '%' 				OR Patient_MRN LIKE '%' + @search + '%' 				OR patientContact.Patient_Contact_Phone LIKE '%' + @search + '%' 			) 			AND (TPA.IsHospitalEHRDocumentation = 0 OR Coalesce(TPA.Activity_Start_Status, 1) IN (1,2)) 	),  	OrderByResult AS (SELECT *, 			ROW_NUMBER() over ( 			order BY case when @orderBy = 'PatientFullName' and @orderDir = 'asc' then PatientFullName end, 					case when @orderBy = 'PatientFullName' and @orderDir = 'desc' then PatientFullName end desc, 					case when @orderBy = 'AttemptNumber' and @orderDir = 'asc' then AttemptNumber end, 					case when @orderBy = 'AttemptNumber' and @orderDir = 'desc' then AttemptNumber end desc, 					case when @orderBy = 'ActivityAssignedToName' and @orderDir = 'asc' then Activity_Assigned_To_Name end, 					case when @orderBy = 'ActivityAssignedToName' and @orderDir = 'desc' then Activity_Assigned_To_Name end desc, 					case when @orderBy = 'DischargeDate' and @orderDir = 'asc' then DischargeDate end, 					case when @orderBy = 'DischargeDate' and @orderDir = 'desc' then DischargeDate end desc, 					case when @orderBy = 'Activity_Start_Date' and @orderDir = 'asc' then Activity_Start_Date end, 					case when @orderBy = 'Activity_Start_Date' and @orderDir = 'desc' then Activity_Start_Date end desc, 					case when @orderBy = 'Activity_Start_Status' and @orderDir = 'asc' then DisplayActivityStartStatus end, 					case when @orderBy = 'Activity_Start_Status' and @orderDir = 'desc' then DisplayActivityStartStatus end desc, 					case when @orderBy = 'Activity_Assigned_To_Name' and @orderDir = 'asc' then Activity_Assigned_To_Name end, 					case when @orderBy = 'Activity_Assigned_To_Name' and @orderDir = 'desc' then Activity_Assigned_To_Name end desc 			) AS RowNumber FROM Result  	)   	SELECT *, (Select Count(Patient_ID) FROM Result) TotalRows   	FROM OrderByResult  	WHERE 		OrderByResult.RowNumber BETWEEN (@pageIndex + 1) AND (@pageIndex  + @pageSize)  END  --EXEC USP_GetAllHomeVisitLog 3,21,1,'','PatientFullName','desc',0,10