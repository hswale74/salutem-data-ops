 Create procedure [dbo].USP_InPatientActivity ( 	@userId INT,  	@AccountId INT, 	@ActivitySort varchar(50) = '', 	@filterBy varchar(100) = '',  	@filterByActivityType varchar(max) = '', 	@search nvarchar(50) = '',  	@orderBy nvarchar(50) = 'Activity_Start_Date',  	@orderDir varchar(4) = 'asc',  	@StartFrom int = 0,  	@PageSize int = 999999999 ) AS BEGIN 	SET NOCOUNT ON; 	Declare @isAdmin BIT; 	SET @isAdmin = (SELECT dbo.func_IsUserAdmin(@userId)); 	DECLARE @AccountType int = 0; 	SELECT @AccountType=AccountType FROM Mst_Account WHERE Account_ID = @AccountId; 	if @AccountType != 3 	BEGIN 		SET @isAdmin = 1; 	END 	DECLARE @TodayDate Date = (Select Convert(Date, GetDate())); 	 	CREATE TABLE #FilterByStatus (item INT); 	CREATE TABLE #FilterByActivityType (item VARCHAR(MAX)); 	INSERT INTO #FilterByStatus SELECT * FROM dbo.func_Split(@filterBy, ','); 	INSERT INTO #FilterByActivityType SELECT * FROM dbo.func_Split(@filterByActivityType, ',');  	WITH Result AS ( 	Select  		MA.Activity_ID,  		MA.Activity_Name, 		MA.ActivityType,  		MA.Activity_Description, 		TPA.Patient_Activity_ID, 		TPA.Patient_ID, 		TPA.Activity_Type_ID, 		MAT.Activity_Type_Name, 		TPA.Activity_Start_Date, 		Coalesce(TPA.Activity_Actual_End_Time, TPA.Activity_Actual_Start_Time) AS LastActivityDate, 		TPA.Activity_Start_Time, 		TPA.Activity_Actual_Start_Time, 		TPA.Activity_Actual_End_Time, 		TPA.Activity_Assigned_To, 		MU.User_First_Name + ' ' + MU.User_Last_Name AS Activity_Assigned_To_Name, 		TPA.Activity_Note, 		Coalesce(TPA.Activity_Start_Status, 1) AS Activity_Start_Status, 		TPA.Activity_Delay_Note, 		TPA.Activity_Status, 		TPA.Activity_CretaedAt, 		TPA.Activity_CreatedBy, 		TPA.Activity_UpdatedAt, 		TPA.Activity_UpdatedBy, 		TPA.Patient_Enroll_ID, 		P.Patient_First_Name, 		P.Patient_Middle_Name, 		P.Patient_Last_Name, 		P.Patient_First_Name + ' '+ P.Patient_Last_Name AS PatientFullName, 		P.Account_Name, 		p.ZipCode, 		TPA.AttemptNumber, 		TPA.LastCallOutcomeName, 		ActivityOutcomeName, 		TPA.InPatientLogId 	From dbo.Trn_Patient_Activity TPA with (nolock)  	INNER JOIN dbo.View_Mst_Patient P with (nolock)  ON P.Patient_ID = TPA.Patient_ID AND P.Account_ID = @AccountId 	INNER JOIN dbo.Mst_Activity MA with (nolock)  ON MA.Activity_ID = TPA.Activity_ID 	INNER JOIN dbo.Mst_Activity_Type MAT with (nolock)  ON MAT.Activity_Type_ID = TPA.Activity_Type_ID 	INNER JOIN dbo.Mst_User MU with (nolock) ON MU.User_ID = TPA.Activity_Assigned_To AND TPA.Activity_Assigned_To > 0 	WHERE P.Patient_Status = 1 AND TPA.Activity_Status = 1  		AND (@isAdmin = 1 OR TPA.Activity_Assigned_To = @userId)  		AND TPA.Activity_Assigned_To IS NOT NULL 		AND (@ActivitySort = ''  				OR (@ActivitySort = 'Today' AND TPA.Activity_Start_Date = @TodayDate ) 				OR (@ActivitySort = 'Future' AND TPA.Activity_Start_Date > @TodayDate ) 				OR (@ActivitySort = 'Delayed' AND TPA.Activity_Start_Date < @TodayDate) 			) 			AND (	@filterBy = '' OR (ISNULL(TPA.Activity_Start_Status, 1) in (SELECT * FROM #FilterByStatus))	) 			AND (	@filterByActivityType = '' OR (ISNULL(MA.ActivityType COLLATE SQL_Latin1_General_CP1_CI_AS, '') in (SELECT * FROM #FilterByActivityType))	) 			AND ( 					@search = '' OR ( 						(Patient_First_Name + ' ' + Patient_Last_Name)  LIKE '%' + @search + '%' 						OR P.Patient_MRN LIKE '%' + @search + '%' 						OR P.Patient_Contact_Phone LIKE '%' + @search + '%' 					) 				) 	),  	OrderByResult AS (SELECT *, 			ROW_NUMBER() over ( 			order BY case when @orderBy = 'Activity_Name' and @orderDir = 'asc' then Activity_Name end, 								case when @orderBy = 'Activity_Name' and @orderDir = 'desc' then Activity_Name end desc, 								case when @orderBy = 'PatientFullName' and @orderDir = 'asc' then PatientFullName end, 								case when @orderBy = 'PatientFullName' and @orderDir = 'desc' then PatientFullName end desc, 								case when @orderBy = 'Activity_Assigned_To_Name' and @orderDir = 'asc' then Activity_Assigned_To_Name end, 								case when @orderBy = 'Activity_Assigned_To_Name' and @orderDir = 'desc' then Activity_Assigned_To_Name end desc, 								case when @orderBy = 'LastCallOutcomeName' and @orderDir = 'asc' then LastCallOutcomeName end, 								case when @orderBy = 'LastCallOutcomeName' and @orderDir = 'desc' then LastCallOutcomeName end desc, 								case when @orderBy = 'ActivityOutcomeName' and @orderDir = 'asc' then ActivityOutcomeName end, 								case when @orderBy = 'ActivityOutcomeName' and @orderDir = 'desc' then ActivityOutcomeName end desc, 								case when @orderBy = 'LastActivityDate' and @orderDir = 'asc' then LastActivityDate end, 								case when @orderBy = 'LastActivityDate' and @orderDir = 'desc' then LastActivityDate end desc, 								case when @orderBy = 'Activity_Start_Date' and @orderDir = 'asc' then Activity_Start_Date end, 								case when @orderBy = 'Activity_Start_Date' and @orderDir = 'desc' then Activity_Start_Date end desc 								 			) AS RowNumber FROM Result  	)   	SELECT *, (Select Count(Activity_ID) FROM Result) TotalRows   	FROM OrderByResult  	WHERE OrderByResult.RowNumber BETWEEN (@StartFrom + 1) AND (@StartFrom  + @pageSize) END -- EXEC USP_InPatientActivity 3,21,'Delayed','1,2','','','Activity_Start_Date','asc',0,10 -- SP_Recompile USP_InPatientActivity