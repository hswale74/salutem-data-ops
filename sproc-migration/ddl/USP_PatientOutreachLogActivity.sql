 Create procedure [dbo].USP_PatientOutreachLogActivity ( 	@userId INT,  	@AccountId INT, 	@ActivitySort varchar(50) = '', 	@filterBy varchar(100) = '',  	@filterByActivityType varchar(max) = '', 	@search nvarchar(50) = '',  	@orderBy nvarchar(50) = '',  	@orderDir varchar(4) = 'asc',  	@StartFrom int = 0,  	@PageSize int = 999999999 ) AS BEGIN 	SET NOCOUNT ON; 	Declare @isAdmin BIT; 	SET @isAdmin = dbo.func_IsUserAdmin(@userId); WITH Result AS ( SELECT  	OT.OutreachLogId, 	OT.Patient_ID, 	OT.TypeID, 	OT.PracticeID, 	OT.BCMUserId, 	OT.OutreachStatusId, 	OT.OutreachDate, 	OT.SUD, 	OT.CallBackDate, 	OT.LastCallDate, 	P.Patient_First_Name,  	P.Patient_Last_Name, 	P.PatientFullName, 	OutType.Discription AS OutLogType, 	PR.PracticeName, 	BCMUSR.User_First_Name + ' ' + BCMUSR.User_Last_Name AS BCMUserName, 	OT.AttemptNumber, 	OT.AssignedTo, 	OT.ActivityOutcome FROM Trn_OutreachLog OT INNER JOIN View_Mst_Patient P ON OT.Patient_ID = p.Patient_ID INNER JOIN Mst_Practice PR ON OT.PracticeID = PR.ID LEFT JOIN Mst_User BCMUSR ON OT.BCMUserId = BCMUSR.User_ID LEFT JOIN Mst_Enum OutType ON OutType.EnumValue = OT.TypeID AND OutType.EnumType = 'OutreachLogType' WHERE P.Patient_Status = 1 AND (@search = '' OR (P.Patient_First_Name + ' ' + P.Patient_Last_Name  LIKE '%' + @search + '%' OR P.Patient_MRN LIKE '%' + @search + '%' OR P.Patient_Contact_Phone LIKE '%' + @search + '%')) ),  	OrderByResult AS (SELECT *, 			ROW_NUMBER() over ( 			order BY case when @orderBy = 'PatientFullName' and @orderDir = 'asc' then PatientFullName end, 								case when @orderBy = 'PatientFullName' and @orderDir = 'desc' then PatientFullName end desc								 								 			) AS RowNumber FROM Result  	) 	 	SELECT *, (Select Count(OutreachLogId) FROM Result) TotalRows   	FROM OrderByResult  	WHERE OrderByResult.RowNumber BETWEEN (@StartFrom + 1) AND (@StartFrom  + @pageSize); END  