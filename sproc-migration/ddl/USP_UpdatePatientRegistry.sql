 CREATE procedure USP_UpdatePatientRegistry ( 	@UserID INT = 3, 	@PatientActivityID INT, 	@WeekNumber INT =10 ) AS BEGIN 	SET NOCOUNT ON;  	DECLARE @PatientID INT = 0 ; 	DECLARE @FlaggedComment varchar(500) = NULL; 	DECLARE @Flagged BIT = NULL; 	DECLARE @GNFlaggedComment varchar(500) = NULL; 	DECLARE @GNFlagged BIT = NULL;  	SELECT * INTO #TempTable FROM ( 			SELECT P.Patient_ID, Patient_First_Name, Patient_Last_Name, Patient_DOB 				,Ph.PhysicianName AS ReferringProviderName 				,Pr.PracticeName 				,DXT.Dx 				,DateOfService 				,Coalesce(Activity_Actual_End_Time, Activity_Actual_Start_Time) AS ActivityDate 				,Patient_Activity_ID PatientActivityID 				--,PHQScore.Score AS LatestPHQScore 				--,GADScore.Score AS LatestGADScore 				,(SELECT TOP 1 Score FROM funcGetPatientPHQorGADScore(P.Patient_ID, PA.Patient_Activity_ID, 1, 1)) LatestPHQScore 				,(SELECT TOP 1 Score FROM funcGetPatientPHQorGADScore(P.Patient_ID, PA.Patient_Activity_ID, 1, 2)) LatestGADScore 				,PA.HasFlagForReview 				,PA.ReviewNote 				,ALog.CliniciansName 			FROM Mst_Patient P 			INNER JOIN Trn_Patient_Activity PA ON P.Patient_ID = PA.Patient_ID AND PA.Patient_Activity_ID = @PatientActivityID 			LEFT JOIN Mst_Physician Ph ON Ph.ID = P.ReferringProviderId  			LEFT JOIN Mst_Practice Pr on Pr.ID = P.PatientPracticeId 			LEFT JOIN TrnPatientAssessmentLog ALog ON ALog.PatientActivityID = PA.Patient_Activity_ID  			CROSS APPLY funcGetDXCodeByPatientId(P.Patient_ID) DXT 			--CROSS APPLY funcGetPatientPHQorGADScore(P.Patient_ID, PA.Patient_Activity_ID, 1, 1) PHQScore 			--CROSS APPLY funcGetPatientPHQorGADScore(P.Patient_ID, PA.Patient_Activity_ID, 1, 2) GADScore 	) A; 	 	SELECT @PatientID = Patient_ID FROM #TempTable; 	IF @PatientID > 0  	BEGIN 		IF EXISTS (SELECT * FROM TrnPatientRegistry WHERE PatientID = @PatientID) 		BEGIN 			DECLARE @LastActivityDate DateTime = (SELECT Coalesce(LastActivityDate, GETDATE()) FROM TrnPatientRegistry WHERE PatientID = @PatientID) 			DECLARE @NoOfWeek INT = (SELECT DATEDIFF(wk,CAST(@LastActivityDate AS DATETIME),GETDATE()))	 			IF @NoOfWeek >= @WeekNumber 			BEGIN 				SET @FlaggedComment = 'Flagged this Patient because of Patient is Participating after '+ CONVERT(varchar(4), @NoOfWeek)+ ' number of weeks.'; 				SET @Flagged = 1; 			END 			ELSE 			BEGIN 				SET @FlaggedComment = NULL; 				SET @Flagged = NULL; 			END  			UPDATE TrnPatientRegistry  				SET ClinicianName = T.CliniciansName,  				ReferringProviderName=T.ReferringProviderName,  				PracticeName = T.PracticeName, 				Diagnosis = T.Dx, 				PHQ9LastServiceDate=T.ActivityDate, 				PHQ9LastScore = T.LatestPHQScore, 				GAD7LastServiceDate = T.ActivityDate, 				GAD7LastScore = T.LatestGADScore, 				PatientActivityID = T.PatientActivityID, 				IsFlagged= Coalesce(@Flagged, T.HasFlagForReview), 				FlagComment = Coalesce(@FlaggedComment, T.ReviewNote), 				UpdatedBy = @UserID, 				UpdatedOn = GETDATE(), 				IsReviewed = 0, 				ReviewedNote = null, 				LastActivityDate= GETDATE() 			FROM TrnPatientRegistry R INNER JOIN #TempTable T ON R.PatientID = T.Patient_ID  			--PRINT 'Record Found: '+  Convert(varchar(50), @Cursor_PatientID) 		END 		ELSE BEGIN  			INSERT INTO TrnPatientRegistry (PatientID, ClinicianName,ReferringProviderName,PracticeName,Diagnosis,ServiceStartDate,PHQ9FirstServiceDate,PHQ9FirstScore,GAD7FirstServiceDate,GAD7FirstScore,PatientActivityID,IsFlagged,FlagComment,UpdatedBy, UpdatedOn,LastActivityDate) 			SELECT T.Patient_ID, T.CliniciansName,ReferringProviderName,PracticeName,T.Dx,T.DateOfService,T.ActivityDate, T.LatestPHQScore,T.ActivityDate,T.LatestGADScore,T.PatientActivityID,T.HasFlagForReview,T.ReviewNote,@UserID,GETUTCDATE(),GETDATE() 			FROM #TempTable T  			--PRINT 'Record not found: '+ Convert(varchar(50), @Cursor_PatientID) 		END 	END 	ELSE  	BEGIN  		--This is for Group note activity. Since group note activity dont have score above #TempTable (result of Table A will fail) mapping will fail. 		--So here we have create or update Patient registry without score. 		SELECT * INTO #TempActivityTable FROM (  			SELECT P.Patient_ID, Patient_First_Name, Patient_Last_Name, Patient_DOB 				,Ph.PhysicianName AS ReferringProviderName 				,Pr.PracticeName 				,DXT.Dx 				,DateOfService 				,Coalesce(Activity_Actual_End_Time, Activity_Actual_Start_Time) AS ActivityDate 				,Patient_Activity_ID PatientActivityID 				,PA.HasFlagForReview 				,PA.ReviewNote 				,ALog.CliniciansName 			FROM Mst_Patient P 			INNER JOIN Trn_Patient_Activity PA ON P.Patient_ID = PA.Patient_ID AND PA.Patient_Activity_ID = @PatientActivityID 			LEFT JOIN Mst_Physician Ph ON Ph.ID = P.ReferringProviderId  			LEFT JOIN Mst_Practice Pr on Pr.ID = P.PatientPracticeId 			LEFT JOIN TrnPatientAssessmentLog ALog ON ALog.PatientActivityID = PA.Patient_Activity_ID  			CROSS APPLY funcGetDXCodeByPatientId(P.Patient_ID) DXT 		) B 		 		SELECT @PatientID = Patient_ID FROM #TempActivityTable; 		IF @PatientID > 0  		BEGIN 			IF EXISTS (SELECT * FROM TrnPatientRegistry WHERE PatientID = @PatientID) 			BEGIN 				DECLARE @GNLastActivityDate DateTime = (SELECT Coalesce(LastActivityDate, GETDATE()) FROM TrnPatientRegistry WHERE PatientID = @PatientID) 				DECLARE @GNNoOfWeek INT = (SELECT DATEDIFF(wk,CAST(@GNLastActivityDate AS DATETIME),GETDATE())) 				IF @GNNoOfWeek >= @WeekNumber 				BEGIN 					SET @GNFlaggedComment = 'Flagged this Patient because of Patient is Participating after '+ CONVERT(varchar(4), @GNNoOfWeek)+ ' number of weeks.'; 					SET @GNFlagged = 1; 				END 				ELSE 				BEGIN 					SET @GNFlaggedComment = NULL; 					SET @GNFlagged = NULL; 				END 				UPDATE TrnPatientRegistry  					SET ClinicianName = T.CliniciansName,  					ReferringProviderName=T.ReferringProviderName,  					PracticeName = T.PracticeName, 					Diagnosis = T.Dx, 					PatientActivityID = T.PatientActivityID, 					IsFlagged= Coalesce(@GNFlagged, T.HasFlagForReview), 					FlagComment = Coalesce(@GNFlaggedComment, T.ReviewNote), 					UpdatedBy = @UserID, 					UpdatedOn = GETDATE(), 					IsReviewed = 0, 					ReviewedNote = null, 					LastActivityDate= GETDATE() 				FROM TrnPatientRegistry R INNER JOIN #TempActivityTable T ON R.PatientID = T.Patient_ID  			END 			ELSE BEGIN  				INSERT INTO TrnPatientRegistry (PatientID, ClinicianName,ReferringProviderName,PracticeName,Diagnosis,ServiceStartDate,PatientActivityID,IsFlagged,FlagComment,UpdatedBy, UpdatedOn,LastActivityDate) 				SELECT T.Patient_ID, T.CliniciansName,ReferringProviderName,PracticeName,T.Dx,T.DateOfService,T.PatientActivityID,T.HasFlagForReview,T.ReviewNote,@UserID,GETUTCDATE(),GETDATE() 				FROM #TempActivityTable T  			END 		END 		DROP TABLE #TempActivityTable  	END 	DROP TABLE #TempTable; END  -- EXEC USP_UpdatePatientRegistry 13, 3229,10