 CREATE PROCEDURE USP_GetAllDischargeLog ( 	@userId int, 	@AccountId INT, 	@search nvarchar(50) = '',  	@EnrollmentStatus int = 0, -- zero will indicate not enrolled, 99 will indicate all enrollment status 	@orderBy nvarchar(50) = 'Paitent_ID',  	@orderDir varchar(4) = 'asc',  	@pageIndex int = 0,  	@pageSize int = 99999 ) AS BEGIN 	SET NOCOUNT ON; 	--DECLARE @currentYear int = YEAR(GETDATE()); 	Declare @isAdmin BIT; 	SET @isAdmin = dbo.func_IsUserAdmin(@userId);  	DECLARE @EnrollMstActivityID int; 	SET @EnrollMstActivityID = (SELECT Activity_ID FROM Mst_Activity WHERE ActivityType = 'DischargeInfo');  	WITH Result AS ( 		SELECT  			patient.Patient_ID, 			patient.Account_ID, 			patient.Patient_First_Name, 			patient.Patient_Last_Name, 			patient.Patient_First_Name + ' '+ patient.Patient_Last_Name  AS PatientFullName, 			patient.Patient_DOB, 			patient.Patient_MRN, 			IPL.InPatientLogId, 			IPL.AdmissionDate, 			IPL.EstimatedDischargeDate, 			IPL.DischargeDate, 			IPL.UnitNumber, 			IPL.RoomNumber, 			IPL.EnrollmentStatus, 			enm.Discription AS DisplayEnrollmentStatus, 			IPL.PostDischargeFolloUpNeeded, 			IPL.IsDischargeSummary, 			IPL.IsDischargeDate, 			IPL.IsHospitalEHRDocumentation, 			IPL.IsHomeVisitScheduled, 			IPL.IsReferral, 			IPL.NotesBy, 			IPL.Notes, 			IPL.NotesDate, 			TPA.Patient_Activity_ID, 			TPA.Activity_Assigned_To, 			usr.User_First_Name + ' ' + usr.User_Last_Name AS ActivityAssignedToName, 			TPA.CallBackDate, 			TPA.LastAttemptDate, 			TPA.Activity_Start_Status, 			enmm.Discription AS DispalyActivityStatus, 			TPA.AttemptNumber, 			patientContact.Patient_Contact_Phone, 			patient.HomeVisitType, 			MAT.Activity_Type_Name 		FROM Trn_InPatientLog IPL with (nolock) 		INNER JOIN dbo.Mst_Patient patient with (nolock) ON patient.Patient_ID = IPL.Patient_ID AND patient.Account_ID = @AccountId		 		INNER JOIN Mst_Enum enm ON enm.EnumValue = IPL.EnrollmentStatus AND enm.EnumType = 'EnrollmentStatus' 		LEFT JOIN  			dbo.Trn_Patient_Contact patientContact with (nolock) ON patient.Patient_ID = patientContact.Patient_ID AND patientContact.IsPrimary = 1  		LEFT JOIN Trn_Patient_Activity TPA ON TPA.Patient_ID = IPL.Patient_ID AND TPA.InPatientLogId = IPL.InPatientLogId AND TPA.Activity_ID = @EnrollMstActivityID 		LEFT JOIN Mst_Enum enmm ON enmm.EnumValue = TPA.Activity_Start_Status AND enmm.EnumType = 'ActivityStatus' 		LEFT JOIN Mst_User usr with (nolock) ON usr.User_ID = TPA.Activity_Assigned_To 		LEFT JOIN Mst_Activity_Type MAT ON MAT.Activity_Type_ID = patient.HomeVisitType 		WHERE ((Patient_First_Name + ' ' + Patient_Last_Name)  LIKE '%' + @search + '%' 				OR Patient_MRN LIKE '%' + @search + '%' 				OR patientContact.Patient_Contact_Phone LIKE '%' + @search + '%' 			) 			AND (@EnrollmentStatus = 99 OR IPL.EnrollmentStatus = @EnrollmentStatus) 			AND patient.Patient_Status = 1 			AND (IPL.PostDischargeFolloUpNeeded = 1 AND IPL.IsDischargeSummary = 1 AND IPL.IsDischargeDate = 1) -- patient has discharged and Post folloup checked 			AND (IPL.IsHomeVisitScheduled = 0 OR (EnrollmentStatus > 0 AND IPL.IsHospitalEHRDocumentation = 0) OR EnrollmentStatus = 0) -- Home visit not scheduled or Enrollment set but EHR not checked OR Not enrolled 			--AND (@isAdmin = 1 OR TPA.Activity_Assigned_To IS NULL OR TPA.Activity_Assigned_To = @userId) -- if has admin or not assigned or assigned only 			AND (EnrollmentStatus <=1 -- not enrolled and accepted can be select 					OR (EnrollmentStatus = 2 AND IPL.IsHospitalEHRDocumentation = 0 AND TPA.Activity_Assigned_To IS NOT NULL) -- or Enrollment refused from discharge log with Assigned to is not null and EHR not checked 					OR (EnrollmentStatus = 3 AND IPL.IsHospitalEHRDocumentation = 0 AND TPA.Activity_Assigned_To IS NOT NULL) 					OR (EnrollmentStatus = 6 AND IPL.IsHospitalEHRDocumentation = 0 AND TPA.Activity_Assigned_To IS NOT NULL) 					OR (EnrollmentStatus = 8 AND IPL.IsHospitalEHRDocumentation = 0 AND TPA.Activity_Assigned_To IS NOT NULL) 				) 			AND DATEDIFF(DAY, IPL.DischargeDate, GETDATE()) <= 15 --drop from Discharge log on day 15 past discharge date 	),  	OrderByResult AS (SELECT *, 			ROW_NUMBER() over ( 			order BY case when @orderBy = 'PatientFullName' and @orderDir = 'asc' then PatientFullName end, 					case when @orderBy = 'PatientFullName' and @orderDir = 'desc' then PatientFullName end desc, 					case when @orderBy = 'DisplayEnrollmentStatus' and @orderDir = 'asc' then DisplayEnrollmentStatus end, 					case when @orderBy = 'DisplayEnrollmentStatus' and @orderDir = 'desc' then DisplayEnrollmentStatus end desc, 					case when @orderBy = 'AttemptNumber' and @orderDir = 'asc' then AttemptNumber end, 					case when @orderBy = 'AttemptNumber' and @orderDir = 'desc' then AttemptNumber end desc, 					case when @orderBy = 'AdmissionDate' and @orderDir = 'asc' then AdmissionDate end, 					case when @orderBy = 'AdmissionDate' and @orderDir = 'desc' then AdmissionDate end desc, 					case when @orderBy = 'EstimatedDischargeDate' and @orderDir = 'asc' then EstimatedDischargeDate end, 					case when @orderBy = 'EstimatedDischargeDate' and @orderDir = 'desc' then EstimatedDischargeDate end desc, 					case when @orderBy = 'ActivityAssignedToName' and @orderDir = 'asc' then ActivityAssignedToName end, 					case when @orderBy = 'ActivityAssignedToName' and @orderDir = 'desc' then ActivityAssignedToName end desc, 					case when @orderBy = 'DispalyActivityStatus' and @orderDir = 'asc' then DispalyActivityStatus end, 					case when @orderBy = 'DispalyActivityStatus' and @orderDir = 'desc' then DispalyActivityStatus end desc, 					case when @orderBy = 'CallBackDate' and @orderDir = 'asc' then CallBackDate end, 					case when @orderBy = 'CallBackDate' and @orderDir = 'desc' then CallBackDate end desc 			) AS RowNumber FROM Result  	)   	SELECT *, (Select Count(Patient_ID) FROM Result) TotalRows   	FROM OrderByResult  	WHERE 		OrderByResult.RowNumber BETWEEN (@pageIndex + 1) AND (@pageIndex  + @pageSize)  END  --EXEC USP_GetAllDischargeLog 3,21,'',99,'PatientFullName','desc',0,10