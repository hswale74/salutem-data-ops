 Create PROCEDURE [dbo].[USP_GetPatientRegistry] 	@AccountId INT, 	@LoggedInUserID INT = 0, 	@ClinicianName NVARCHAR(100)='', 	@PracticeID INT=0, 	@PatientStatusId INT=0, 	@search nvarchar(50) = '',  	@orderBy nvarchar(50) = 'IsFlagged',  	@orderDir varchar(4) = 'desc',  	@StartFrom int = 0,  	@PageSize int = 999999999, 	@DateOfBirth Datetime =null, 	@NextScheduledSessionFromDate Datetime =null, 	@NextScheduledSessionToDate Datetime=null, 	@IsMissing int=0, 	@MonthLost nvarchar(100) = null AS BEGIN 	SET NOCOUNT ON; 	DECLARE @MonthLostFromDate DATETIME,@MonthLostToDate DATETIME; 	 	DECLARE @Today DATE = CONVERT(DATE, GETDATE()); 	DECLARE @MonthOfService DATE = EOMONTH(GETUTCDATE()); 	DECLARE @LastMonthOfService DATE = (EOMONTH(DATEADD(MONTH, -1, @MonthOfService))); 	DECLARE @DisplayLastMonthOfService VARCHAR(20) = FORMAT(EOMONTH(DATEADD(MONTH, -1, @MonthOfService)),'MMMM yyyy'); 			 			SELECT distinct ta.Patient_ID, 				    STUFF( 				     ( 				         SELECT ',' + MA.Activity_Name 				         FROM Trn_Patient_Activity ta_inner 				         INNER JOIN dbo.Mst_Activity MA ON MA.Activity_ID = ta_inner.Activity_ID 				         WHERE ta.Patient_ID = ta_inner.Patient_ID 				             AND MA.ActivityType IN ('InitialAssessment','ProgressNote','GroupNote','ClinicalCareScreening') 				             AND ta_inner.Activity_Start_Status IN (1,2) and ta_inner.Activity_Status = 1 				             AND ta_inner.Activity_Start_Date > @Today 				         FOR XML PATH('') 				     ), 1, 1, '' 				 ) AS Activity_Name	 				 ,ta.Activity_Start_Date 			INTO #Temp2 			FROM Trn_Patient_Activity ta 			INNER JOIN dbo.Mst_Activity MA ON MA.Activity_ID = TA.Activity_ID 			 			WHERE MA.ActivityType IN ('InitialAssessment','ProgressNote','GroupNote','ClinicalCareScreening') 			AND ta.Activity_Start_Status In (1,2) and ta.Activity_Status = 1 			AND ta.Activity_Start_Date > @Today 			GROUP BY ta.Patient_ID,ta.Activity_Start_Date;  			SELECT PatientID, ID AS prevMonthData             INTO #Temp4 			FROM TrnBillingProfile  			WHERE MonthOfService = @LastMonthOfService;  	WITH Result AS ( 		SELECT distinct R.ID, 			P.Patient_ID, 			P.Patient_First_Name, 			P.Patient_Last_Name, 			P.Patient_DOB, 			P.Patient_First_Name + ' '+	P.Patient_Last_Name AS PatientFullName, 			R.ClinicianName, 			R.ReferringProviderName, 			R.PracticeName, 			R.Diagnosis, 			R.ServiceStartDate, 			R.PHQ9FirstServiceDate, 			R.PHQ9FirstScore, 			R.PHQ9LastServiceDate, 			R.PHQ9LastScore, 			R.GAD7FirstServiceDate, 			R.GAD7FirstScore, 			R.GAD7LastServiceDate, 			R.GAD7LastScore, 			R.PatientActivityID, 			ISNULL(P.IsFlagThisPatient, 0) IsFlagged, 			P.FlagComment, 			R.IsReviewed, 			R.ReviewedNote, 			R.UpdatedBy, 			R.UpdatedOn, 			MS.StatusName, 			R.CCSLastDate as CCS, 			R.IALastDate as IA, 			R.PNLastDate as PN, 			R.GNLastDate as GN, 			fw.NoOfWeeksofIA, 			R.MinutesOfThisMonth, 			R.TotalSessionCount as NoOfSession, 			R.RecentAttendanceName AS Attendance, 			ME.Discription AS DisplayTypeOfReferral, 			R.BillableCPTCodes AS BillingCPTCode, 			CASE WHEN T2.Activity_Name IS NULL THEN 'Missing' ELSE T2.Activity_Name END AS NextScheduledSession, 			R.MinutesToNextCode, 			Convert(VARCHAR(20), R.LastMonthYearSeen) AS LastMonthYearSeen, 			P.PatientPracticeId, 			CASE WHEN T4.prevMonthData IS NULL THEN @DisplayLastMonthOfService ELSE '' END AS MonthLost, 			R.MindHealthyFee 		FROM TrnPatientRegistry R 		 		INNER JOIN Mst_Patient P ON R.PatientID = P.Patient_ID AND P.Patient_Status = 1 AND P.Account_ID = @AccountId 		INNER JOIN TrnUserPractices UP ON P.PatientPracticeId = UP.PracticeID  AND UP.UserID = @LoggedInUserID 		INNER JOIN MstPatientStatuses MS ON MS.ID = P.PatientStatusId 		INNER JOIN Mst_Enum ME ON ME.EnumValue = P.TypeOfReferral AND ME.EnumType='TypeOfReferral' 		OUTER apply dbo.funcGetNoOfWeeksOfIA(P.Patient_ID) fw		 		LEFT  JOIN #Temp2 T2 ON R.PatientID = T2.Patient_ID 		LEFT join #Temp4 T4 ON R.PatientID = T4.PatientID 		WHERE  (@ClinicianName = '' OR R.ClinicianName = @ClinicianName) 			AND (@PracticeID = 0 OR P.PatientPracticeId = @PracticeID) 			AND (@PatientStatusId = 0 OR P.PatientStatusId = @PatientStatusId) 			AND (P.Patient_DOB =  @DateOfBirth OR @DateOfBirth is null) 			AND (T2.Activity_Start_Date >=  @NextScheduledSessionFromDate OR @NextScheduledSessionFromDate is null) 			AND (T2.Activity_Start_Date <=  @NextScheduledSessionToDate OR @NextScheduledSessionToDate  is null) 			AND (@IsMissing = 0 OR ((@IsMissing = 1 And T2.Activity_Name is null) OR (@IsMissing = 2 And T2.Activity_Name is not null))) 			--AND ((T4.prevMonthData IS NULL And @MonthLost like '%'+@LastMonthOfService+'%') OR @MonthLost is null) 	),  	OrderByResult AS ( 		SELECT *, ROW_NUMBER() over ( order BY IsReviewed, case when @orderBy = 'IsFlagged' and @orderDir = 'asc' then IsFlagged end, 			case when @orderBy = 'IsFlagged' and @orderDir = 'desc' then IsFlagged end desc, PHQ9LastServiceDate asc, PHQ9LastServiceDate, ServiceStartDate ) AS RowNumber  		FROM Result  	) 	SELECT *, (Select Count(Patient_ID) FROM Result) TotalRows   	FROM OrderByResult  	WHERE OrderByResult.RowNumber BETWEEN (@StartFrom + 1) AND (@StartFrom  + @pageSize) 	 	DROP table #Temp2 	DROP table #Temp4 END -- EXEC USP_GetPatientRegistry 22, 3